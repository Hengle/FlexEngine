#version 450

#extension GL_EXT_scalar_block_layout : enable

#include "vk_noises.glsl"

#define DISPATCH_COUNT							8

layout (std430, binding = 0) uniform UBOConstant
{
	TerrainGenConstantData terrainGenConstantData;
} uboConstant;

layout (std430, binding = 1) uniform UBODynamic
{
	TerrainGenDynamicData terrainGenDynamicData;
} uboDynamic;

layout (std430, binding = 2) buffer TerrainPointBuffer
{
	vec4 points[];
};

layout (local_size_x = DISPATCH_COUNT, local_size_y = DISPATCH_COUNT, local_size_z = DISPATCH_COUNT) in;

void main()
{
	ivec3 chunkIndex = uboDynamic.terrainGenDynamicData.chunkIndex;
	uint numPointsPerAxis = uboConstant.terrainGenConstantData.numPointsPerAxis;
	float chunkSize = uboConstant.terrainGenConstantData.chunkSize;

	uvec3 id = gl_GlobalInvocationID;

	vec3 posOS = vec3(gl_GlobalInvocationID) / float(numPointsPerAxis - 1);
	vec3 posWS = (vec3(chunkIndex) + posOS) * chunkSize;

	float sphereRadius = 0.5; // + noise(posWS) * 0.45
	// float surface = length(posOS - vec3(0.5)) - sphereRadius;
	float surface = abs(posWS.y) - 1.0;

	uint index = coordToIndex(id.x, id.y, id.z, numPointsPerAxis);
	points[index] = vec4(posWS, surface);
}
